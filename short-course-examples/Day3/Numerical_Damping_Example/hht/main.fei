// 
// Real ESSI Simulator
// Modeling and Simulation Examples
// for more information, see: http://real-essi.info
// 



model name "veri_newmark";
dt=0.05*s;
alpha_val=-0.20;
TargetPeriod  = 1*s;
d0     = 0.1*m;
L     = 1*m;
m_add    = 10E3*N*s^2/m;
nu     = 0.0;
Abeam    = 1*m^2;
Ibeam    = 1*m^4;
Jbeam    = 1*m^4;
rho_beam   = 0*kg/m^3;
Ebeam    = (2*pi/TargetPeriod)^2*m_add*L^3 / (12 * Ibeam);
Gbeam    = Ebeam/2/(1+nu);
stiffness_   = 12*Ebeam*Ibeam/(L^3);
Force    = stiffness_*d0;
xi=0.0;
wn=2*pi/TargetPeriod;
wd = wn*sqrt(1 - xi^2);
c = 2*xi*wn*m_add;
add node # 1  at (0*m, 0*m ,  0*m) with 6 dofs;      
add node # 2  at (0*m, 0*m ,  L) with 6 dofs;
add node # 3  at (1*m, 0*m ,  L) with 6 dofs;
fix node # 1 dofs all;
fix node # 2 dofs uy uz rx ry rz ;
fix node # 3 dofs all;
add element # 1 type beam_elastic with nodes  (1, 2)
    cross_section = Abeam
    elastic_modulus =    Ebeam
    shear_modulus = Gbeam
    torsion_Jx = Jbeam
    bending_Iy = Ibeam
    bending_Iz = Ibeam
    mass_density = rho_beam
    xz_plane_vector = (1, 0, 1 ) 
    joint_1_offset = (0*m, 0*m, 0*m) 
    joint_2_offset = (0*m, 0*m, 0*m);
    
    
    
add mass to node # 2  mx = m_add my = 0*kg  mz = 0*kg Imx = 0*kg*m^2  Imy = m_add*L^2  Imz = 0*kg*m^2;
new loading stage "static";
add load # 1 to node # 2 type linear 
  Fx = Force ;
  
define load factor increment 1;
define algorithm With_no_convergence_check;
define solver ProfileSPD;
simulate 1 steps using static algorithm;
remove load # 1;
new loading stage "dynamic";
define dynamic integrator Newmark with gamma = 0.6 beta = 0.3025;
    
define algorithm With_no_convergence_check;
define solver ProfileSPD;
Nsteps = ceil(10*s/dt);
simulate (Nsteps) steps using transient algorithm time_step = dt;
bye;
