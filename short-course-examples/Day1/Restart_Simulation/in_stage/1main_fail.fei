model name "t" ;

Eshell  = 1e8*N/m^2; 
nu    = 0.3;        
rho   = 1e2*kg/m^3;     


add material # 1 type VonMisesArmstrongFrederick 
    mass_density =  140.0*kg/m^3
    elastic_modulus =  3E7 *Pa
    poisson_ratio =  0.0
    von_mises_radius =  1E4*Pa
    armstrong_frederick_ha =  3E7*Pa
    armstrong_frederick_cr =  5E2
    isotropic_hardening_rate = 0.0*Pa ;



include "node.fei";
include "element.fei";
include "constraint.fei"';



define NDMaterial constitutive integration algorithm Backward_Euler
    yield_function_relative_tolerance =  1E-6
    stress_relative_tolerance =  1E-6
    maximum_iterations = 100
    ;


new loading stage "1";
include "load.fei";
	

define convergence test Relative_Norm_Unbalanced_Force
    tolerance =  1E-7
    maximum_iterations =  10 ; 


define algorithm Newton;



if(IS_PARALLEL==0)
{define solver UMFPack;}
else
{define solver parallel;}

define load factor increment 0.5;
simulate 2 steps using static algorithm;



bye;